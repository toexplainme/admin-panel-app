{"ast":null,"code":"import { sortBy, slice } from 'lodash';\nimport { getSortAscending, getSortColumn } from \"./sort_selector\";\nexport function getOrdersList(appState) {\n  return appState.ordersListReducer.ordersList;\n}\nexport function getResultOrders(appState) {\n  const {\n    filterOrderOrFio,\n    filterDateFrom,\n    filterDateTo,\n    filterStatus,\n    filterPriceFrom,\n    filterPriceTo\n  } = appState.filterReducer;\n  const column = getSortColumn(appState);\n  const ascending = getSortAscending(appState);\n  let list = getOrdersList(appState);\n  list = list.filter(d => (d.name.toLowerCase().includes(filterOrderOrFio.toLowerCase()) || d.id.toString().startsWith(filterOrderOrFio.toString())) && d.sum >= filterPriceFrom && d.sum <= filterPriceTo && new Date(d.created.split(',')[0].split('.')[2], d.created.split(',')[0].split('.')[1] - 1, d.created.split(',')[0].split('.')[0]) >= new Date(filterDateFrom.split('-')[0], filterDateFrom.split('-')[1] - 1, filterDateFrom.split('-')[2]) && new Date(d.created.split(',')[0].split('.')[2], d.created.split(',')[0].split('.')[1] - 1, d.created.split(',')[0].split('.')[0]) <= new Date(filterDateTo.split('-')[0], filterDateTo.split('-')[1] - 1, filterDateTo.split('-')[2]) && filterStatus.includes(d.status.toLowerCase()));\n  let newList = sortBy(list, column);\n\n  if (!ascending) {\n    newList = newList.reverse();\n  }\n\n  return newList;\n}","map":{"version":3,"sources":["/Users/maksimpetrov/Desktop/git/admin-panel-app/src/data/selectors/orders_list_selector.js"],"names":["sortBy","slice","getSortAscending","getSortColumn","getOrdersList","appState","ordersListReducer","ordersList","getResultOrders","filterOrderOrFio","filterDateFrom","filterDateTo","filterStatus","filterPriceFrom","filterPriceTo","filterReducer","column","ascending","list","filter","d","name","toLowerCase","includes","id","toString","startsWith","sum","Date","created","split","status","newList","reverse"],"mappings":"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","sourcesContent":["import { sortBy, slice } from 'lodash'\nimport { getSortAscending, getSortColumn } from \"./sort_selector\";\n\nexport function getOrdersList(appState) {   \n    return appState.ordersListReducer.ordersList;\n}\n\nexport function getResultOrders(appState) {\n\n    const { \n        filterOrderOrFio,\n        filterDateFrom,\n        filterDateTo,\n        filterStatus,\n        filterPriceFrom,\n        filterPriceTo } = appState.filterReducer;\n\n    const column = getSortColumn(appState)\n    const ascending = getSortAscending(appState)\n    \n    let list = getOrdersList(appState)\n\n    list = list.filter((d) => (\n        \n        (d.name.toLowerCase().includes(filterOrderOrFio.toLowerCase()) || d.id.toString().startsWith(filterOrderOrFio.toString())) &&\n\n        (d.sum >= filterPriceFrom && d.sum <= filterPriceTo) &&\n\n        ((new Date((d.created.split(',')[0]).split('.')[2], (d.created.split(',')[0]).split('.')[1]-1, (d.created.split(',')[0]).split('.')[0]) >=\n          new Date((filterDateFrom).split('-')[0], (filterDateFrom).split('-')[1]-1, (filterDateFrom).split('-')[2])) &&\n\n        (new Date((d.created.split(',')[0]).split('.')[2], (d.created.split(',')[0]).split('.')[1]-1, (d.created.split(',')[0]).split('.')[0]) <=\n         new Date((filterDateTo).split('-')[0], (filterDateTo).split('-')[1]-1, (filterDateTo).split('-')[2]))) &&\n          \n        (filterStatus.includes(d.status.toLowerCase()))\n        )\n        )\n\n    let newList = sortBy(list, column)\n    if (!ascending) {\n        newList = newList.reverse();\n    }\n\n    return newList\n}\n"]},"metadata":{},"sourceType":"module"}