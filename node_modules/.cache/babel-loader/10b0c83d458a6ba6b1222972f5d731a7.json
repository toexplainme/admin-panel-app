{"ast":null,"code":"import { sortBy, slice } from 'lodash';\nimport { getSortAscending, getSortColumn } from \"./sort_selector\";\nimport { getCurrentPage, getPagingSize } from \"./paging_selector\";\nexport function getOrdersList(appState) {\n  return appState.ordersListReducer.ordersList;\n}\nexport function getOrdersCount(appState) {\n  return appState.ordersListReducer.countOrders;\n}\nexport function getResultOrdersFiltered(appState) {\n  const {\n    filterOrderOrFio,\n    filterDateFrom,\n    filterDateTo,\n    filterStatus,\n    filterPriceFrom,\n    filterPriceTo\n  } = appState.filterReducer;\n  let list = getOrdersList(appState);\n  list = list.filter(d => (d.name.toLowerCase().includes(filterOrderOrFio.toLowerCase()) || d.id.toString().startsWith(filterOrderOrFio.toString())) && d.sum >= filterPriceFrom && d.sum <= filterPriceTo && new Date(d.created.split(',')[0].split('.')[2], d.created.split(',')[0].split('.')[1] - 1, d.created.split(',')[0].split('.')[0]) >= new Date(filterDateFrom.split('-')[0], filterDateFrom.split('-')[1] - 1, filterDateFrom.split('-')[2]) && new Date(d.created.split(',')[0].split('.')[2], d.created.split(',')[0].split('.')[1] - 1, d.created.split(',')[0].split('.')[0]) <= new Date(filterDateTo.split('-')[0], filterDateTo.split('-')[1] - 1, filterDateTo.split('-')[2]) && filterStatus.includes(d.status.toLowerCase()));\n  return list;\n}\nexport function getResultOrders(appState) {\n  const column = getSortColumn(appState);\n  const ascending = getSortAscending(appState);\n  const currentPage = getCurrentPage(appState);\n  const pagingSize = getPagingSize(appState);\n  let list = getOrdersListFiltered(appState);\n  const skip = (currentPage - 1) * pagingSize;\n  const take = pagingSize;\n  list = slice(list, skip, skip + take);\n  let newList = sortBy(list, column);\n\n  if (!ascending) {\n    newList = newList.reverse();\n  }\n\n  return newList;\n}","map":{"version":3,"sources":["/Users/maksimpetrov/Desktop/git/admin-panel-app/src/data/selectors/orders_list_selector.js"],"names":["sortBy","slice","getSortAscending","getSortColumn","getCurrentPage","getPagingSize","getOrdersList","appState","ordersListReducer","ordersList","getOrdersCount","countOrders","getResultOrdersFiltered","filterOrderOrFio","filterDateFrom","filterDateTo","filterStatus","filterPriceFrom","filterPriceTo","filterReducer","list","filter","d","name","toLowerCase","includes","id","toString","startsWith","sum","Date","created","split","status","getResultOrders","column","ascending","currentPage","pagingSize","getOrdersListFiltered","skip","take","newList","reverse"],"mappings":"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","sourcesContent":["import { sortBy, slice } from 'lodash'\nimport { getSortAscending, getSortColumn } from \"./sort_selector\";\nimport { getCurrentPage, getPagingSize } from \"./paging_selector\";\n\nexport function getOrdersList(appState) {   \n    return appState.ordersListReducer.ordersList;\n}\n\nexport function getOrdersCount(appState) {   \n    return appState.ordersListReducer.countOrders;\n}\n\nexport function getResultOrdersFiltered(appState) {\n\n    const { \n        filterOrderOrFio,\n        filterDateFrom,\n        filterDateTo,\n        filterStatus,\n        filterPriceFrom,\n        filterPriceTo } = appState.filterReducer;\n    \n    let list = getOrdersList(appState)\n\n    list = list.filter((d) => (\n        \n        (d.name.toLowerCase().includes(filterOrderOrFio.toLowerCase()) || d.id.toString().startsWith(filterOrderOrFio.toString())) &&\n\n        (d.sum >= filterPriceFrom && d.sum <= filterPriceTo) &&\n\n        ((new Date((d.created.split(',')[0]).split('.')[2], (d.created.split(',')[0]).split('.')[1]-1, (d.created.split(',')[0]).split('.')[0]) >=\n          new Date((filterDateFrom).split('-')[0], (filterDateFrom).split('-')[1]-1, (filterDateFrom).split('-')[2])) &&\n\n        (new Date((d.created.split(',')[0]).split('.')[2], (d.created.split(',')[0]).split('.')[1]-1, (d.created.split(',')[0]).split('.')[0]) <=\n         new Date((filterDateTo).split('-')[0], (filterDateTo).split('-')[1]-1, (filterDateTo).split('-')[2]))) &&\n          \n        (filterStatus.includes(d.status.toLowerCase()))\n        )\n        )\n\n    return list\n}\n\nexport function getResultOrders(appState) {\n\n    const column = getSortColumn(appState)\n    const ascending = getSortAscending(appState)\n    const currentPage = getCurrentPage(appState)\n    const pagingSize = getPagingSize(appState)\n    \n    let list = getOrdersListFiltered(appState)\n\n    const skip = (currentPage - 1) * pagingSize\n    const take = pagingSize\n\n    list = slice(list, skip, skip + take)\n\n    let newList = sortBy(list, column)\n    if (!ascending) {\n        newList = newList.reverse();\n    }\n\n    return newList\n}"]},"metadata":{},"sourceType":"module"}